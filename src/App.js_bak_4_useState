import logo from './logo.svg';
import './App.css';
import { useState } from 'react';
import Sub from './Sub';


function App() {

  console.log("app 실행");

  const [num, setNum]  = useState(5);

  let sample = [
    {id:1, name:"홍길동"},
    {id:2, name:"임꺽정"},
    {id:3, name:"장보고"},
    {id:4, name:"코스"}
  ];

  const [users, setUsers] = useState(sample); //레퍼런스가 변경되야 동작!!

  const download = () => {

    // // setUsers(sample); 
    // const a = sample.concat({id: 5, name:'조자룡'});
    // console.log(a);
    // //setUsers([...sample]); //강제로 re rendoring 
  
    // setUsers([...a]); //스프레드로 뿌려줘야 re randering이 된다. 

    //fetch().then().then(); //back-end 에서 받을 때 
    setUsers([...sample,{id:num, name:'조자룡'}]); //sample 이 불변이라 1조자룡 2조자룡 3조자룡 이런식으로 앞에 숫자만 바뀐다 
    setNum(num+1);
  }

  
  // 랜더링 시점 = 상태값 변경
  return (
  <div>  
      <button onClick={download}>다운로드</button>
      {users.map((n) => (<h1>{n.id}, {n.name}</h1>))}
  </div>
  )
}

export default App;
